# Generated by Django 5.2 on 2025-05-18 09:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myapplication', '0003_alter_medicinesale_sale_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('U', 'Prefer Not to Say')], max_length=1, verbose_name='Gender')),
                ('id_number', models.CharField(max_length=20, unique=True, verbose_name='ID Number')),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='National ID')),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Passport Number')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('alternate_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Alternate Phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact')),
                ('emergency_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Emergency Phone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State/Province')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, null=True, verbose_name='Blood Type')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('chronic_conditions', models.TextField(blank=True, null=True, verbose_name='Chronic Conditions')),
                ('specialization', models.CharField(choices=[('GP', 'General Practitioner'), ('CAR', 'Cardiologist'), ('DER', 'Dermatologist'), ('PED', 'Pediatrician'), ('ORT', 'Orthopedic Surgeon'), ('NEU', 'Neurologist'), ('PSY', 'Psychiatrist'), ('ONC', 'Oncologist'), ('RAD', 'Radiologist'), ('EM', 'Emergency Medicine'), ('ANES', 'Anesthesiologist'), ('OBGYN', 'Obstetrician/Gynecologist'), ('ENT', 'ENT Specialist')], max_length=10, verbose_name='Specialization')),
                ('license_number', models.CharField(max_length=50, unique=True, verbose_name='Medical License Number')),
                ('license_expiry', models.DateField(blank=True, null=True, verbose_name='License Expiry Date')),
                ('years_of_experience', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Years of Experience')),
                ('qualifications', models.TextField(blank=True, null=True, verbose_name='Qualifications')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Professional Bio')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Staff')),
                ('joining_date', models.DateField(blank=True, null=True, verbose_name='Joining Date')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='Department')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='doctors/profile_pictures/', verbose_name='Profile Picture')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='doctors/signatures/', verbose_name='Signature')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('working_days', models.CharField(blank=True, help_text='Comma separated days (e.g., Mon,Tue,Wed)', max_length=100, null=True, verbose_name='Working Days')),
                ('working_hours', models.CharField(blank=True, help_text='e.g., 9:00 AM - 5:00 PM', max_length=100, null=True, verbose_name='Working Hours')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['last_name', 'first_name'], name='myapplicati_last_na_95bd45_idx'), models.Index(fields=['specialization'], name='myapplicati_special_e40963_idx'), models.Index(fields=['license_number'], name='myapplicati_license_2d0995_idx')],
            },
        ),
    ]
