# Generated by Django 5.2 on 2025-05-18 10:04

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myapplication', '0004_doctor'),
    ]

    operations = [
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('U', 'Prefer Not to Say')], max_length=1, verbose_name='Gender')),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='National ID')),
                ('nurse_id', models.CharField(max_length=20, unique=True, verbose_name='Nurse ID')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('alternate_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Alternate Phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact')),
                ('emergency_relation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Relationship')),
                ('emergency_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Emergency Phone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State/Province')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('blood_type', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, null=True, verbose_name='Blood Type')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('chronic_conditions', models.TextField(blank=True, null=True, verbose_name='Chronic Conditions')),
                ('nurse_type', models.CharField(choices=[('RN', 'Registered Nurse'), ('LPN', 'Licensed Practical Nurse'), ('NP', 'Nurse Practitioner'), ('CNS', 'Clinical Nurse Specialist'), ('CRNA', 'Certified Registered Nurse Anesthetist'), ('CNM', 'Certified Nurse Midwife'), ('SN', 'Student Nurse')], max_length=5, verbose_name='Nurse Type')),
                ('license_number', models.CharField(max_length=50, unique=True, verbose_name='License Number')),
                ('license_expiry', models.DateField(blank=True, null=True, verbose_name='License Expiry Date')),
                ('years_of_experience', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)], verbose_name='Years of Experience')),
                ('department', models.CharField(choices=[('ER', 'Emergency Room'), ('ICU', 'Intensive Care Unit'), ('OR', 'Operating Room'), ('PED', 'Pediatrics'), ('OB', 'Obstetrics'), ('ONC', 'Oncology'), ('CAR', 'Cardiology'), ('PSY', 'Psychiatry'), ('GEN', 'General Ward'), ('OPD', 'Outpatient Department')], max_length=5, verbose_name='Department')),
                ('specialization', models.CharField(blank=True, max_length=100, null=True, verbose_name='Specialization')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='Certifications')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Professional Bio')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Staff')),
                ('joining_date', models.DateField(blank=True, null=True, verbose_name='Joining Date')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position')),
                ('shift_pattern', models.CharField(blank=True, max_length=100, null=True, verbose_name='Shift Pattern')),
                ('is_charge_nurse', models.BooleanField(default=False, verbose_name='Charge Nurse')),
                ('is_bcls_certified', models.BooleanField(default=False, verbose_name='BCLS Certified')),
                ('is_acl_certified', models.BooleanField(default=False, verbose_name='ACLS Certified')),
                ('is_pals_certified', models.BooleanField(default=False, verbose_name='PALS Certified')),
                ('additional_skills', models.TextField(blank=True, null=True, verbose_name='Additional Skills')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='nurses/profile_pictures/', verbose_name='Profile Picture')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='nurses/signatures/', verbose_name='Signature')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Nurse',
                'verbose_name_plural': 'Nurses',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['last_name', 'first_name'], name='myapplicati_last_na_5979c9_idx'), models.Index(fields=['nurse_type'], name='myapplicati_nurse_t_ae1c7f_idx'), models.Index(fields=['department'], name='myapplicati_departm_e0f72e_idx'), models.Index(fields=['license_number'], name='myapplicati_license_676822_idx')],
            },
        ),
    ]
